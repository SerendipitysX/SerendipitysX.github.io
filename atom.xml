<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://SerendipitysX.github.io/</id>
    <title>XSS的备忘录</title>
    <updated>2021-02-27T09:17:12.345Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://SerendipitysX.github.io/"/>
    <link rel="self" href="https://SerendipitysX.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://SerendipitysX.github.io/images/avatar.png</logo>
    <icon>https://SerendipitysX.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, XSS的备忘录</rights>
    <entry>
        <title type="html"><![CDATA[[算法]详解常见排序算法]]></title>
        <id>https://SerendipitysX.github.io/post/suan-fa-xiang-jie-chang-jian-pai-xu-suan-fa/</id>
        <link href="https://SerendipitysX.github.io/post/suan-fa-xiang-jie-chang-jian-pai-xu-suan-fa/">
        </link>
        <updated>2021-02-27T07:48:13.000Z</updated>
        <summary type="html"><![CDATA[<!-- <center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,0.5);" 
    src="C:/Users/DELL/Documents/Gridea/post-images/1614269553980.jpg" width = "90%" alt=""/>
    <br>
    <div style="color:orange; border-bottom: 2px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 1px;">
      cr: K Mitch Hodge
  	</div>
</center> -->
<h1 id="冒泡排序">冒泡排序</h1>
<p>题设：有n个无序数字，需要按一定顺序排列。<br>
时间复杂度：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span><br>
<img src="https://media.giphy.com/media/cQIuA8Q77zFUm9NVwS/giphy.gif" alt="BubbleSort" loading="lazy"><br>
Key:</p>
<ol>
<li>相邻两个数字比大小，无论结果如何，指针都要向后移</li>
<li>每一趟都会往有序区（自然在末端啦）塞一个数字</li>
<li>共<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>趟</li>
</ol>
<pre><code>def Bubblesort(li):
    for i in range(len(li)-1):
        for j in range(len(li)-i-1):
            if li[j] &gt; li[j+1]:
                li[j],li[j+1] = li[j+1],li[j]
    return li
</code></pre>
<p>但是考虑一种情况，如果这是一个有序或者部分有序的数列， 上述程序一视同仁的进行操作将会造成很多浪费，故设置标志位，如果某一糖没有发生交换，说明已经是有序数组了，可以直接输出。</p>
<pre><code>def Bubblesort(li):
    for i in range(len(li)-1):
        exchange = False
        for j in range(len(li)-i-1):
            if li[j] &gt; li[j+1]:
                li[j],li[j+1] = li[j+1],li[j]
                exchange = True
        if exchange == True: ##if not exchange:
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<!-- <center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,0.5);" 
    src="C:/Users/DELL/Documents/Gridea/post-images/1614269553980.jpg" width = "90%" alt=""/>
    <br>
    <div style="color:orange; border-bottom: 2px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 1px;">
      cr: K Mitch Hodge
  	</div>
</center> -->
<h1 id="冒泡排序">冒泡排序</h1>
<p>题设：有n个无序数字，需要按一定顺序排列。<br>
时间复杂度：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span><br>
<img src="https://media.giphy.com/media/cQIuA8Q77zFUm9NVwS/giphy.gif" alt="BubbleSort" loading="lazy"><br>
Key:</p>
<ol>
<li>相邻两个数字比大小，无论结果如何，指针都要向后移</li>
<li>每一趟都会往有序区（自然在末端啦）塞一个数字</li>
<li>共<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>趟</li>
</ol>
<pre><code>def Bubblesort(li):
    for i in range(len(li)-1):
        for j in range(len(li)-i-1):
            if li[j] &gt; li[j+1]:
                li[j],li[j+1] = li[j+1],li[j]
    return li
</code></pre>
<p>但是考虑一种情况，如果这是一个有序或者部分有序的数列， 上述程序一视同仁的进行操作将会造成很多浪费，故设置标志位，如果某一糖没有发生交换，说明已经是有序数组了，可以直接输出。</p>
<pre><code>def Bubblesort(li):
    for i in range(len(li)-1):
        exchange = False
        for j in range(len(li)-i-1):
            if li[j] &gt; li[j+1]:
                li[j],li[j+1] = li[j+1],li[j]
                exchange = True
        if exchange == True: ##if not exchange:
&lt;!-- more --&gt;

            return li
    return li
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello World! I'm Ainsley Xiao!]]></title>
        <id>https://SerendipitysX.github.io/post/hello-world-im-ainsley-xiao/</id>
        <link href="https://SerendipitysX.github.io/post/hello-world-im-ainsley-xiao/">
        </link>
        <updated>2021-02-25T15:37:12.000Z</updated>
        <content type="html"><![CDATA[<!-- <center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,0.5);" 
    src="C:/Users/DELL/Documents/Gridea/post-images/1614269553980.jpg" width = "90%" alt=""/>
    <br>
    <div style="color:orange; border-bottom: 2px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 1px;">
      cr: K Mitch Hodge
  	</div>
</center> -->
<p>大三下学期伊始，肖四四终于拥有一个自己的博客啦。</p>
<p>最近乃至停止写小说的这几个月，我越来越感受到自己有些失语，这种感觉就像是用很丰富的食材做了一锅粗茶淡饭。都说行过于言，但不言无以记行。而这一次呢，我想记录在案的<strong>行</strong>就是知识和心情，毕竟我对这个备忘录的定位就是<strong>不说废话的树洞</strong>。</p>
<p>目前我的搭建方法比较小白，即用typora编辑好文章，用Gridea上传。经过一晚上的实践，发现两个待解决难题：</p>
<ol>
<li>MD格式直接从typora移植到Gridea会有一些小问题。Moreover，typora中的markdown格式可以由CSS自定义。</li>
<li>Gridea上传速度是在影响心情！！！比如我现在写完的这篇文章死活传不上去，临门一脚掉链子可真气人！</li>
</ol>
<p>针对第一点，我终于没有任何理由逃避学习前端了(๑＞ڡ＜)☆（<s>轮到我捏娃娃了!</s>）</p>
<p>把链接贴在下边，这么便捷，你不学学看吗~</p>
<p><a href="https://www.bilibili.com/video/BV1YJ411a7dy">狂神说CSS3</a>  <a href="https://www.bilibili.com/video/BV1x4411V75C">狂神说HTML</a></p>
<hr>
<p>既然已经来到了大三这个节点！想到夏天要到了，本咸鱼确实振奋，决定伸个懒腰顺便翻身晒个太阳o(´^｀)o<br>
下列任务按从重到轻的顺序排列，学习资源也附上备忘：<br>
🚀某杯比赛（ACwing的算法基础课 &amp; B站的算法教程）<br>
✈️大创项目（发现的网站 &amp; 老师给的书）<br>
🚗托福 3.27 （多给一个月，至少得刷20套TPO）<br>
🚌深度学习基础 （吴恩达作业 &amp; Sklearn）<br>
🌵为暑假实习而奋斗</p>
<p>可能开学后会有新增和结构变更。今后每月25号就是本四四的月度总结。<br>
不想也不会盲目跟着别人卷，一切都有序滑向我想去的那一方，这就是努力的意义所在。<br>
这一次咸鱼翻身，我是认真的！💪</p>
]]></content>
    </entry>
</feed>